<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:local="*" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.ResultEvent;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.remoting.mxml.Operation;
            import mx.utils.ObjectUtil;
            import mx.utils.ObjectProxy;
            import mx.core.Application;

            import org.granite.rpc.remoting.mxml.SecureRemoteObject;
            import org.granite.events.SecurityEvent;
			
			[Bindable] 
        	public var doLogout:Function = null;
        	
        	[Bindable]
        	public var userName:String = "";

			public function setup():void {
                var names:Array = new Array();
                var users:ArrayCollection = Application.application.users;
                var len:uint = users.length;
                var i:int = 0;
                for (; i < len; i++) {
                    var obj:Object = { userName: users[i]};
                    names.push(obj);
                }
                dg.dataProvider = names;
			}
			public function onUserCreated(event: ResultEvent): void {
				var item:Object = {userName: event.result.toString()};
				dg.dataProvider.addItem(item);
			}
			
			public function onUserDeleted(event: ResultEvent): void {
				if (event.result) {
					var index:int = dg.dataProvider.getItemIndex(dg.selectedItem);
					dg.dataProvider.removeItemAt(index);
				}
				else {
					Alert.show("Can not delete user " + dg.selectedItem.userName);
				}
			}
			
			public function onCreate(login: String): void {
                var operation: Operation = new Operation();
                operation.name = "createUser";
                operation.addEventListener(ResultEvent.RESULT, onUserCreated);
                Application.application.srv.operations = {createUser: operation};
                Application.application.srv.createUser(login);
            }
            
            public function onDelete(login: String):void {
                var operation: Operation = new Operation();
                operation.name = "deleteUser";
                operation.addEventListener(ResultEvent.RESULT, onUserDeleted);
                Application.application.srv.operations = {deleteUser: operation};
                Application.application.srv.deleteUser(login);
            }
		]]>
	</mx:Script>
	
	<mx:HBox width="100%">
		<mx:Spacer width="100%"/>
		<mx:Label text="Connected as {userName}" fontSize="11" fontWeight="bold" paddingTop="4" paddingRight="6"/>
		<mx:Button label="Logout" click="doLogout()"/>
	</mx:HBox>
	<mx:TabNavigator x="20" y="20" width="100%" height="100%">
		<mx:Canvas label="Main Menu" width="100%" height="100%">
			<mx:Label x="10" y="10" text="Welcome" fontWeight="bold" fontSize="20"/>
			<mx:Label x="10" y="50" text="Congratulations, you have logged in successfully" width="297" height="23"/>
		</mx:Canvas>
		<mx:Canvas width="100%" height="100%" label="Profile">
			<mx:Button x="178" y="256" label="Create" width="94" click="onCreate(login.text)"/>
			<mx:Button x="10" y="200" label="Delete" width="262" click="onDelete(dg.selectedItem.userName)"/>
			<mx:TextInput id="login" x="10" y="256"/>
			<mx:Label x="10" y="230" text="Create new user from username" width="262"/>
			<mx:Label x="10" y="10" text="List of users" width="262"/>
			<mx:DataGrid id="dg" x="10" y="36" width="262" initialize="setup()">
				<mx:columns>
					<mx:DataGridColumn headerText="Username" dataField="userName"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:Canvas>
	</mx:TabNavigator>
</mx:Canvas>
